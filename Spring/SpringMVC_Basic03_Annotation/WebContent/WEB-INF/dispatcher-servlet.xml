<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context.xsd">
<!--  
xml 파일
IOC 컨테이너에 적재될 bean 객체 생성과 injection (DI)
-->
<!-- 
의존 관계에 필용한 빈 객체 자동 생성
@Autowired , @Resource 동작하기 위한 빈객체 .....
 -->
<context:annotation-config />

<!-- 공통 빈  -->
<bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/views/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
</bean>

<!-- TEST_1  -->
<!--  
component-scan 으로 작업하기 설명
-->
	<bean id="helloController" class="com.controller.HelloController"></bean>	

<!-- TEST_2 -->
<!--  
하나의 요청 주소 : GET , POST 처리
화면단 , 처리단 (로그인화면 , 로그인 처리  :  글쓰기 화면 , 글쓰기 처리)
전제조건 : 요청 주소가 같다

id, name 참조가(injection) (0)

@Autowired >> com.service.ArticleService
-->
	<bean class="com.controller.NewArticleController"></bean>
	<bean class="com.service.ArticleService"></bean>
</beans> 


