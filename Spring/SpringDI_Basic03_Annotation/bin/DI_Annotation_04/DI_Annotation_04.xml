<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           https://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           https://www.springframework.org/schema/context/spring-context.xsd">
   <!--  
   		IOC 컨테이너 (Spring 전용 메모리 공간) 안에  생성될 [객체 만들고 조립(의존)] 설정
   		>> xml 문서 또는 annotation
   		>> DI_11.xml
   		
   		:제어의 역전(프로그램의 제어구조를 바꾼다)
   		:작은단위의 부품을 만들어 놓고 그 것을 조립하는 행의 (레고 블럭)
		
		>>JAVA 코드
		MonitorViewer viewer = new MonitorViewer();
		Recorder recorder = new Recorder();
		viewer.setRecorder(recorder);
	-->
	
	<!--
	   @Resource
	      목적 : 어플리케이션에서 필요로 하는 자원을 자동 연결(의존하는 빈 객체 전달)할 때 사용
       @Autowired 와 같은 기능을 하며  @Autowired와 차이점은 
       @Autowired는 타입으로(by type), @Resource는 이름으로(by name)으로 연결시켜준다는 것이다.
	     설정위치 : 프로퍼티, setter메소드
	     추가설정 : CommonAnnotationBeanPostProcessor 클래스를 빈으로 등록시켜줘야 한다. 
	     해당 설정 대신에 <context:annotation-config> 태그를 사용해도 된다. //단점은 쓰지않는 것도 등록해야함
	     옵션 : name 
				
	
	-->
	
	
	<context:annotation-config />
	<bean id="viewer" class="DI_Annotation_04.MonitorViewer"></bean>
	<bean id="xx" class="DI_Annotation_04.Recorder"></bean>
	<bean id="yy" class="DI_Annotation_04.Recorder"></bean>
	<bean id="zz" class="DI_Annotation_04.Recorder"></bean>
	<bean id="pp" class="DI_Annotation_04.Recorder"></bean>
	<bean id="kk" class="DI_Annotation_04.Recorder"></bean>
	
</beans>   










     